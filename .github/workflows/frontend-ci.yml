name: ci-fullstack-workflow

# Manual trigger
on:
  workflow_dispatch:

  push:
    branches: 
      - main
      #comment this later--------------------#
  # Automatic trigger on pull request events targeting the main branch
  pull_request:
    paths:
      - 'starter/frontend/**'
    branches:
      - main


jobs:
  test_job:

    runs-on: ubuntu-latest

    steps:
      # Check out the code from the repository.
     
      - uses: actions/checkout@v3

      # Set up a Node.js environment using the specified node version.
      - uses: actions/setup-node@v3
        with:
          node-version: latest

       # perform cache action
      - uses: actions/cache@v2
        with:
          path: starter/frontend/node_modules  # Path to cache
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}  # Cache key


      # Install the dependencies.
      - run: cd starter/frontend && npm ci

     #Run the tests
      - run: cd starter/frontend && CI=true npm test
    
        

  lint_job:
    runs-on: ubuntu-latest
    steps:    
       # Check out the code from the repository.
     
      - uses: actions/checkout@v3

      # Set up a Node.js environment using the specified node version.
      - uses: actions/setup-node@v3
        with:
          node-version: latest
     
      # perform cache action
      - uses: actions/cache@v2
        with:
          path: starter/frontend/node_modules  # Path to cache
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}  # Cache key
          
      - name: Install dependencies and Run Linting
        run: cd starter/frontend && npm ci && npm run lint

  build_job: 
    runs-on: ubuntu-latest
    
    needs: [test_job,lint_job]

    steps:
        # checkout of code from repo
     - name: checkout code
       uses: actions/checkout@v3

     #   # Set up a Node.js environment using the specified node version.
     # - name: setup noe js
     #   uses: actions/setup-node@v3
     #   with:
     #      node-version: latest
          
     # - name: Install dependencies
     #   run: cd starter/frontend && npm ci
        
     - name: docker image build
       run: |
          cd starter/frontend  # Navigate to the frontend directory
          docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag=mp-frontend:latest .

     
